@page "/Company_infos/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@using JobSearchProject.Shared.Domain

<h3 class="card-title">Company Information</h3>

@if (Company_infos == null)
{
<div class="alert alert-info">Loading Company_infos....</div>
}
else
            {
                <table cless="table table-responsive">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Contact</th>
                            <th>Address</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var Company_info in Company_infos)
                {
                        <tr>
                            <td>@Company_info.Name</td>
                            <td>@Company_info.Contact</td>
                            <td>@Company_info.Address</td>
                            <td>
                                <a href="/Company_infos/view/@Company_info.Id" class="btn btn-primary">
                                    <span class="oi oi-book"></span>
                                </a>
                                <a href="/Company_infos/view/@Company_info.Id" class="btn btn-warning">
                                    <span class="oi oi-pencil"></span>
                                </a>
                                <button class="btn btn-danger" @onclick="@(()=>Delete(Company_info.Id))">
                                    <span class="oi oi-delete"></span>
                                </button>
                            </td>
                        </tr>
                }
                    </tbody>

                </table>
            }
@code {
    private List<Company_info> Company_infos;

    protected async override Task OnInitializedAsync()
    {
        Company_infos = await _client.GetFromJsonAsync<List<Company_info>>($"{Endpoints.Company_infosEndpoint}");
    }
    async Task Delete(int Company_infoId)
    {
        var Company_info = Company_infos.First(q => q.Id == Company_infoId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {Company_info.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.Company_infosEndpoint}/{Company_infoId}");
            await OnInitializedAsync();
        }
    }
}
